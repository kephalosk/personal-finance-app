apiVersion: apps/v1
kind: Deployment
metadata:
  name: nestjs-backend
  labels:
    app: nestjs-backend
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nestjs-backend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: nestjs-backend
    spec:
      containers:
        - name: nestjs-backend
          image: registry.digitalocean.com/kephalosk/nestjs-backend:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: nestjs-backend-service
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app: nestjs-backend
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: backend-philippkraatz-com-cert
  namespace: default
spec:
  secretName: nestjs-backend-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - backend.philippkraatz.com
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nestjs-backend-ingress
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - backend.philippkraatz.com
      secretName: nestjs-backend-tls
  rules:
    - host: backend.philippkraatz.com
      http:
        paths:
          - path: /api(/|$)(.*)
            pathType: ImplementationSpecific
            backend:
              service:
                name: nestjs-backend-service
                port:
                  number: 80