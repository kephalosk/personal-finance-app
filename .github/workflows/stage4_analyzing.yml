name: image-analyzing

on:
  workflow_call:

jobs:
  frontend-trivy:
    runs-on: ubuntu-latest

    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Download PACKAGE_VERSION_FRONTEND Artifact
        uses: actions/download-artifact@v4
        with:
          name: PACKAGE_VERSION_FRONTEND
          path: .

      - name: Read PACKAGE_VERSION_FRONTEND
        id: read_package_version
        run: |
          PACKAGE_VERSION_FRONTEND=$(cat PACKAGE_VERSION_FRONTEND)
          echo "PACKAGE_VERSION_FRONTEND=$PACKAGE_VERSION_FRONTEND" >> $GITHUB_ENV

      - name: Pull image from registry
        run: docker pull registry.digitalocean.com/kephalosk/personal-finance-app:${{ env.PACKAGE_VERSION_FRONTEND }}

      - name: Set up Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -

      - name: Set TRIVY_DBREPO to avoid rate limiting
        run: echo "TRIVY_DBREPO=ghcr.io/aquasecurity/trivy-db" >> $GITHUB_ENV

      - name: Scan Frontend Docker Image
        run: ./bin/trivy image --exit-code 1 --severity HIGH,CRITICAL registry.digitalocean.com/kephalosk/personal-finance-app:${{ env.PACKAGE_VERSION_FRONTEND }}

  frontend-grype:
    runs-on: ubuntu-latest

    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Download PACKAGE_VERSION_FRONTEND Artifact
        uses: actions/download-artifact@v4
        with:
          name: PACKAGE_VERSION_FRONTEND
          path: .

      - name: Read PACKAGE_VERSION_FRONTEND
        id: read_package_version
        run: |
          PACKAGE_VERSION_FRONTEND=$(cat PACKAGE_VERSION_FRONTEND)
          echo "PACKAGE_VERSION_FRONTEND=$PACKAGE_VERSION_FRONTEND" >> $GITHUB_ENV

      - name: Pull image from registry
        run: docker pull registry.digitalocean.com/kephalosk/personal-finance-app:${{ env.PACKAGE_VERSION_FRONTEND }}

      - name: Scan image with Grype
        uses: anchore/scan-action@v6
        continue-on-error: true
        id: grype_scan
        with:
          image: "registry.digitalocean.com/kephalosk/personal-finance-app:${{ env.PACKAGE_VERSION_FRONTEND }}"
          output-format: table
          output-file: GRYPE_SCAN_FRONTEND.txt

      - name: Upload results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: GRYPE_SCAN_FRONTEND
          path: GRYPE_SCAN_FRONTEND.txt
          retention-days: 7

      - name: Fail if Grype Scan Failed
        if: steps.grype_scan.outcome == 'failure'
        run: exit 1

  backend-trivy:
    runs-on: ubuntu-latest

    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Download PACKAGE_VERSION_BACKEND Artifact
        uses: actions/download-artifact@v4
        with:
          name: PACKAGE_VERSION_BACKEND
          path: .

      - name: Read PACKAGE_VERSION_BACKEND
        id: read_package_version
        run: |
          PACKAGE_VERSION_BACKEND=$(cat PACKAGE_VERSION_BACKEND)
          echo "PACKAGE_VERSION_BACKEND=$PACKAGE_VERSION_BACKEND" >> $GITHUB_ENV

      - name: Pull image from registry
        run: docker pull registry.digitalocean.com/kephalosk/nestjs-backend:${{ env.PACKAGE_VERSION_BACKEND }}

      - name: Set up Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -

      - name: Set TRIVY_DBREPO to avoid rate limiting
        run: echo "TRIVY_DBREPO=ghcr.io/aquasecurity/trivy-db" >> $GITHUB_ENV

      - name: Scan Backend Docker Image
        run: ./bin/trivy image --exit-code 1 --severity HIGH,CRITICAL registry.digitalocean.com/kephalosk/nestjs-backend:${{ env.PACKAGE_VERSION_BACKEND }}

  backend-grype:
    runs-on: ubuntu-latest

    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Download PACKAGE_VERSION_BACKEND Artifact
        uses: actions/download-artifact@v4
        with:
          name: PACKAGE_VERSION_BACKEND
          path: .

      - name: Read PACKAGE_VERSION_BACKEND
        id: read_package_version
        run: |
          PACKAGE_VERSION_BACKEND=$(cat PACKAGE_VERSION_BACKEND)
          echo "PACKAGE_VERSION_BACKEND=$PACKAGE_VERSION_BACKEND" >> $GITHUB_ENV

      - name: Pull image from registry
        run: docker pull registry.digitalocean.com/kephalosk/nestjs-backend:${{ env.PACKAGE_VERSION_BACKEND }}

      - name: Scan image with Grype
        uses: anchore/scan-action@v6
        continue-on-error: true
        id: grype_scan
        with:
          image: "registry.digitalocean.com/kephalosk/nestjs-backend:${{ env.PACKAGE_VERSION_BACKEND }}"
          output-format: table
          output-file: GRYPE_SCAN_BACKEND.txt

      - name: Upload results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: GRYPE_SCAN_BACKEND
          path: GRYPE_SCAN_BACKEND.txt
          retention-days: 7

      - name: Fail if Grype Scan Failed
        if: steps.grype_scan.outcome == 'failure'
        run: exit 1

  codeql:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'javascript,typescript'
          build-mode: 'none'

      - name: Finalize CodeQL Database and Upload Results
        uses: github/codeql-action/analyze@v3
        with:
          output: './results'
          upload: 'always'
          upload-database: 'true'
          wait-for-processing: 'true'

  gitleaks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Analyze with Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}