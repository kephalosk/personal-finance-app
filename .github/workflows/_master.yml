name: versioning, tests, build, image-scans, code-scans, linting, ui-tests, deploy and notify

on:
  push:
    branches: 
      - 'master'

permissions:
  security-events: write
  checks: write

jobs:
  versioning:
    uses: ./.github/workflows/versioning.yml

  tests:
    uses: ./.github/workflows/tests.yml
    needs: versioning
    secrets: inherit

  build:
    uses: ./.github/workflows/build.yml
    needs: tests
    secrets: inherit

  image-scans:
    uses: ./.github/workflows/image-scans.yml
    needs: build
    secrets: inherit

  code-scans:
    uses: ./.github/workflows/code-scans.yml
    needs: image-scans
    secrets: inherit

  linting:
    uses: ./.github/workflows/linting.yml
    needs: code-scans
    secrets: inherit

  frontend-e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    needs: frontend-eslint-scan

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: |
         cd frontend
         npm ci

      - name: Install Playwright Browsers
        run: |
         cd frontend
         npx playwright install --with-deps

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Download PACKAGE_VERSION_FRONTEND Artifact
        uses: actions/download-artifact@v4
        with:
          name: PACKAGE_VERSION_FRONTEND
          path: .

      - name: Read PACKAGE_VERSION_FRONTEND
        id: read_package_version
        run: |
          PACKAGE_VERSION_FRONTEND=$(cat PACKAGE_VERSION_FRONTEND)
          echo "PACKAGE_VERSION_FRONTEND=$PACKAGE_VERSION_FRONTEND" >> $GITHUB_ENV

      - name: Pull image from registry
        run: docker pull registry.digitalocean.com/kephalosk/personal-finance-app:${{ env.PACKAGE_VERSION_FRONTEND }}

      - name: Run image from registry
        run: docker run -d -p 5173:80 registry.digitalocean.com/kephalosk/personal-finance-app:${{ env.PACKAGE_VERSION_FRONTEND }}

      - name: Run Playwright tests
        run: |
         cd frontend
         npx playwright test ui-tests/e2e-tests

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: frontend/ui-tests/e2e-tests
          retention-days: 30

  frontend-gui-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    needs: frontend-eslint-scan

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Install Playwright Browsers
        run: |
          cd frontend
          npx playwright install --with-deps

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Download PACKAGE_VERSION_FRONTEND Artifact
        uses: actions/download-artifact@v4
        with:
          name: PACKAGE_VERSION_FRONTEND
          path: .

      - name: Read PACKAGE_VERSION_FRONTEND
        id: read_package_version
        run: |
          PACKAGE_VERSION_FRONTEND=$(cat PACKAGE_VERSION_FRONTEND)
          echo "PACKAGE_VERSION_FRONTEND=$PACKAGE_VERSION_FRONTEND" >> $GITHUB_ENV

      - name: Pull image from registry
        run: docker pull registry.digitalocean.com/kephalosk/personal-finance-app:${{ env.PACKAGE_VERSION_FRONTEND }}

      - name: Run image from registry
        run: docker run -d -p 5173:80 registry.digitalocean.com/kephalosk/personal-finance-app:${{ env.PACKAGE_VERSION_FRONTEND }}

      - name: Run Playwright tests
        run: |
          cd frontend
          npx playwright test ui-tests/gui-tests

      - name: Create Artifact for Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-integration
          path: frontend/ui-tests/gui-tests
          retention-days: 30

  create-new-vrts:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    needs: frontend-gui-tests
    if: needs.frontend-gui-tests.result == 'failure'

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Install Playwright Browsers
        run: |
          cd frontend
          npx playwright install --with-deps

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Download PACKAGE_VERSION_FRONTEND Artifact
        uses: actions/download-artifact@v4
        with:
          name: PACKAGE_VERSION_FRONTEND
          path: .

      - name: Read PACKAGE_VERSION_FRONTEND
        id: read_package_version
        run: |
          PACKAGE_VERSION_FRONTEND=$(cat PACKAGE_VERSION_FRONTEND)
          echo "PACKAGE_VERSION_FRONTEND=$PACKAGE_VERSION_FRONTEND" >> $GITHUB_ENV

      - name: Pull image from registry
        run: docker pull registry.digitalocean.com/kephalosk/personal-finance-app:${{ env.PACKAGE_VERSION_FRONTEND }}

      - name: Run image from registry
        run: docker run -d -p 5173:80 registry.digitalocean.com/kephalosk/personal-finance-app:${{ env.PACKAGE_VERSION_FRONTEND }}

      - name: Run Playwright tests
        run: |
          cd frontend
          npx playwright test ui-tests/gui-tests --update-snapshots

      - name: Create Artifact for new vrt screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: new-vrts
          path: frontend/ui-tests/gui-tests
          retention-days: 30
          
  frontend-deploy:
    runs-on: ubuntu-latest
    
    needs: [frontend-e2e-tests, frontend-gui-tests, backend-eslint-scan]

    steps:
      - name: Checkout master
        uses: actions/checkout@v4
  
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
  
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200
  
      - name: Renew cluster’s certificate
        run: doctl kubernetes cluster kubeconfig save ${{ secrets.CLUSTER_ID }}

      - name: Download PACKAGE_VERSION_FRONTEND Artifact
        uses: actions/download-artifact@v4
        with:
          name: PACKAGE_VERSION_FRONTEND
          path: .
  
      - name: Read PACKAGE_VERSION_FRONTEND
        id: read_package_version
        run: |
          PACKAGE_VERSION_FRONTEND=$(cat PACKAGE_VERSION_FRONTEND)
          echo "PACKAGE_VERSION_FRONTEND=$PACKAGE_VERSION_FRONTEND" >> $GITHUB_ENV

      - name: Deploy to DigitalOcean Kubernetes
        run: |
          helm upgrade personal-finance-app ./deployment/helm/personal-finance-app --namespace default --set serviceVersion=${{ env.PACKAGE_VERSION_FRONTEND }} --wait

      - name: restart Pods
        run: kubectl -n default rollout restart deploy
  
      - name: Verify deployment
        run: kubectl rollout status deployment/personal-finance-app

      - name: Set CURRENT_PROD_FRONTEND_SERVICE_VERSION in GitHub Repository Variables
        run: |
          curl -X PATCH \
            -H "Authorization: Bearer ${{ secrets.VARIABLE_GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -d '{"name": "CURRENT_PROD_FRONTEND_SERVICE_VERSION", "value": "${{ env.PACKAGE_VERSION_FRONTEND }}"}' \
            https://api.github.com/repos/${{ github.repository }}/actions/variables/CURRENT_PROD_FRONTEND_SERVICE_VERSION

  backend-deploy:
    runs-on: ubuntu-latest

    needs: [frontend-e2e-tests, frontend-gui-tests, backend-eslint-scan]

    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Renew cluster’s certificate
        run: doctl kubernetes cluster kubeconfig save ${{ secrets.CLUSTER_ID }}

      - name: Download PACKAGE_VERSION_BACKEND Artifact
        uses: actions/download-artifact@v4
        with:
          name: PACKAGE_VERSION_BACKEND
          path: .

      - name: Read PACKAGE_VERSION_BACKEND
        id: read_package_version
        run: |
          PACKAGE_VERSION_BACKEND=$(cat PACKAGE_VERSION_BACKEND)
          echo "PACKAGE_VERSION_BACKEND=$PACKAGE_VERSION_BACKEND" >> $GITHUB_ENV

      - name: Deploy to DigitalOcean Kubernetes
        run: |
          helm upgrade nestjs-backend ./deployment/helm/nestjs-backend --namespace default --set serviceVersion=${{ env.PACKAGE_VERSION_BACKEND }} --wait

      - name: restart Pods
        run: kubectl -n default rollout restart deploy

      - name: Verify deployment
        run: kubectl rollout status deployment/nestjs-backend

      - name: Set CURRENT_PROD_BACKEND_SERVICE_VERSION in GitHub Repository Variables
        run: |
          curl -X PATCH \
            -H "Authorization: Bearer ${{ secrets.VARIABLE_GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -d '{"name": "CURRENT_PROD_BACKEND_SERVICE_VERSION", "value": "${{ env.PACKAGE_VERSION_BACKEND }}"}' \
            https://api.github.com/repos/${{ github.repository }}/actions/variables/CURRENT_PROD_BACKEND_SERVICE_VERSION
